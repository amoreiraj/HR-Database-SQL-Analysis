-- ===============================================
-- 1. REGIONS
-- ===============================================
CREATE TABLE REGIONS (
    REGION_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    REGION_NAME VARCHAR2(25) NOT NULL
);

COMMENT ON TABLE REGIONS IS 'Contains region IDs and names. Primary key for COUNTRIES.';
COMMENT ON COLUMN REGIONS.REGION_NAME IS 'Name of the region.';

-- ===============================================
-- 2. COUNTRIES
-- ===============================================
CREATE TABLE COUNTRIES (
    COUNTRY_ID CHAR(2) PRIMARY KEY,
    COUNTRY_NAME VARCHAR2(40) NOT NULL,
    REGION_ID NUMBER NOT NULL,
    CONSTRAINT FK_COUNTRIES_REGION FOREIGN KEY (REGION_ID) REFERENCES REGIONS(REGION_ID)
);

COMMENT ON TABLE COUNTRIES IS 'List of countries linked to REGIONS.';

-- ===============================================
-- 3. LOCATIONS
-- ===============================================
CREATE TABLE LOCATIONS (
    LOCATION_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    STREET_ADDRESS VARCHAR2(40),
    POSTAL_CODE VARCHAR2(12),
    CITY VARCHAR2(30) NOT NULL,
    STATE_PROVINCE VARCHAR2(25),
    COUNTRY_ID CHAR(2) NOT NULL,
    LATITUDE NUMBER(9,6),
    LONGITUDE NUMBER(9,6),
    CONSTRAINT FK_LOCATIONS_COUNTRY FOREIGN KEY (COUNTRY_ID) REFERENCES COUNTRIES(COUNTRY_ID)
);

CREATE INDEX LOC_CITY_IX ON LOCATIONS(CITY);
CREATE INDEX LOC_STATE_PROVINCE_IX ON LOCATIONS(STATE_PROVINCE);
CREATE INDEX LOC_COUNTRY_IX ON LOCATIONS(COUNTRY_ID);

-- ===============================================
-- 4. JOBS
-- ===============================================
CREATE TABLE JOBS (
    JOB_ID VARCHAR2(20) PRIMARY KEY,
    JOB_TITLE VARCHAR2(35) NOT NULL,
    MIN_SALARY NUMBER,
    MAX_SALARY NUMBER
);

-- ===============================================
-- 5. DEPARTMENTS
-- ===============================================
CREATE TABLE DEPARTMENTS (
    DEPARTMENT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DEPARTMENT_NAME VARCHAR2(30) NOT NULL,
    MANAGER_ID NUMBER,
    LOCATION_ID NUMBER NOT NULL,
    CONSTRAINT FK_DEPARTMENTS_LOCATION FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS(LOCATION_ID),
    CONSTRAINT FK_DEPT_MANAGER FOREIGN KEY (MANAGER_ID) REFERENCES EMPLOYEES(EMPLOYEE_ID)
);

-- ===============================================
-- 6. EMPLOYEES
-- ===============================================
CREATE TABLE EMPLOYEES (
    EMPLOYEE_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FIRST_NAME VARCHAR2(20),
    LAST_NAME VARCHAR2(25) NOT NULL,
    EMAIL VARCHAR2(25) UNIQUE NOT NULL,
    PHONE_NUMBER VARCHAR2(20),
    HIRE_DATE DATE NOT NULL,
    JOB_ID VARCHAR2(20) NOT NULL,
    SALARY NUMBER(8,2) CHECK (SALARY > 0),
    COMMISSION_PCT NUMBER(3,2),
    MANAGER_ID NUMBER,
    DEPARTMENT_ID NUMBER NOT NULL,
    CONSTRAINT FK_EMPLOYEES_JOB FOREIGN KEY (JOB_ID) REFERENCES JOBS(JOB_ID),
    CONSTRAINT FK_EMPLOYEES_DEPT FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID),
    CONSTRAINT FK_EMPLOYEES_MANAGER FOREIGN KEY (MANAGER_ID) REFERENCES EMPLOYEES(EMPLOYEE_ID)
);

CREATE INDEX EMP_DEPARTMENT_IX ON EMPLOYEES (DEPARTMENT_ID);
CREATE INDEX EMP_JOB_IX ON EMPLOYEES (JOB_ID);
CREATE INDEX EMP_MANAGER_IX ON EMPLOYEES (MANAGER_ID);
CREATE INDEX EMP_NAME_IX ON EMPLOYEES (LAST_NAME, FIRST_NAME);


-- ===============================================
-- 7.JOB_HISTORY
-- ===============================================

